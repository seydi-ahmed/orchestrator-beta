services:
  inventory-db:
    container_name: inventory-db
    build: 
      context: srcs/postgres-db
    restart: always
    env_file: .env
    volumes:
      - inventory-database:/var/lib/postgresql/data
    environment:
      - DB_USER=${INVENTORY_DB_USER}
      - DB_NAME=${INVENTORY_DB_NAME}
      - DB_PASSWORD=${INVENTORY_DB_PASSWORD}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 3s
      timeout: 1s
      retries: 5

  inventory-app:
    container_name: inventory-app
    restart: always
    build:
      context: srcs/inventory-app
    env_file: .env
    expose:
      - ${INVENTORY_APP_PORT}
    depends_on:
      inventory-db:
        condition: service_healthy

  billing-db:
    container_name: billing-db
    build: 
      context: srcs/postgres-db
    restart: always
    volumes:
      - billing-database:/var/lib/postgresql/data
    environment:
      - DB_USER=${BILLING_DB_USER}
      - DB_NAME=${BILLING_DB_NAME}
      - DB_PASSWORD=${BILLING_DB_PASSWORD}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 3s
      timeout: 1s
      retries: 5

  billing-queue:
    container_name: billing-queue
    build:
      context: srcs/rabbitmq
    hostname: billing-queue
    command: rabbitmq-server
    restart: always
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER} 
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD} 
    volumes:
      - billing-queue:/var/lib/rabbitmq
    expose:
      - ${RABBITMQ_PORT}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  billing-app:
    container_name: billing-app
    build:
      context: srcs/billing-app
    env_file: .env
    restart: always
    environment:
      - RABBITMQ_HOST=billing-queue
    expose:
      - ${BILLING_APP_PORT}
    depends_on:
      billing-db:
        condition: service_healthy
      billing-queue:
        condition: service_healthy

  api-gateway:
    container_name: api-gateway
    build:
      context: srcs/api-gateway-app
    restart: always
    env_file: .env
    environment:
      - RABBITMQ_HOST=billing-queue
      - INVENTORY_APP_HOST=inventory-app
      - BILLING_APP_HOST=billing-app
    ports:
      - ${APIGATEWAY_PORT}:${APIGATEWAY_PORT}
    depends_on:
      billing-queue:
        condition: service_healthy

volumes:
  inventory-database:
  billing-database:
  billing-queue:
